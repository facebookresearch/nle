---
name: Build & deploy Docker images

on:
  schedule:
    - cron: "0 6,18 * * *"
  push:
    paths:
      - "docker/Dockerfile*"
  release:
    types: [released]

jobs:
  build_and_publish:
    name: Build and Publish Ubuntu Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: ["xenial", "bionic", "focal"]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ${{ format('Build {0} image (& Publish - Release Only)', matrix.distro) }}
      uses: docker/build-push-action@v2
      with:
        username: edran
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        dockerfile: ${{ format('docker/Dockerfile-{0}', matrix.distro) }}
        tags: dev
        tag_with_sha: true
        add_git_labels: true
        push: ${{ github.event_name == "push" }} # Build on PR, Push on Merge.
    - name: Check Version Matches Release Tag (Release Only)
      if: github.event_name == 'release' && github.event.action == 'released'
      run: |
        echo "v$(cat version.txt)"
        echo "${{ github.event.release.tag_name }}"
        [[ "${{ github.event.release.tag_name }}" == "v$(cat version.txt)" ]]
    - name: Push Version Tag (Release Only)
      if: github.event_name == 'release' && github.event.action == 'released'
      uses: docker/build-push-action@v2
      with:
        username: edran
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        dockerfile: ${{ format('docker/Dockerfile-{0}', matrix.distro) }}
        tags: |
          ${{ format('fairnle/nle-{0}', matrix.distro) }}:latest, 
          ${{ format('fairnle/nle-{0}', matrix-distro) }}:${{ github.event.release.tag_name }}
        add_git_labels: true
        push: true
